<!DOCTYPE html>
<html>
<!--Fablab RFID controller Configuration WebApp by Damian Schneider-->

<head>
    <title> RFID Machine Access - Configuration
    </title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!--preload the spinner image-->
    <link rel="prefetch" href="images/ajax-loader.gif">
    <link rel="stylesheet" href="jquery.mobile-1.4.5.min.css">
    <script src="jquery.js">
    < / script><script> $(document)
    .bind('mobileinit',
        function() {
            $.mobile.changePage.defaults.changeHash = false;
            $.mobile.hashListeningEnabled = false;
            $.mobile.pushStateEnabled = false;
        });
    </script>
    <script>
    var ipValue;
    var connection;
    /*var urltext = "ws://" + window.location.hostname + "/ws"; */
    var urltext = "ws://" + window.location.hostname + ":81";

    function unixToTime(timestamp) {
        var date = new Date(timestamp * 1000);
        var hours = date.getHours();
        var minutes = "0" + date.getMinutes();
        var seconds = "0" + date.getSeconds();
        return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
    };

    function scanWiFi() {
        var toSend = "scan";
        $.mobile.loading("show");
        connection.send(toSend);
    };
    
    function reboot() {
        var toSend = "reboot";
        $.mobile.loading("show");
        connection.send(toSend);
    };
	function RFIDprogram() {
        var toSend = "programtag";
        $.mobile.loading("show");
        connection.send(toSend);
    };
    function RFIDclear() {
        var toSend = "cleartag";
        $.mobile.loading("show");
        connection.send(toSend);
    };
    

    function deleteWiFi() {
        var toSend = "resetwifi";
        connection.send(toSend)	;
    };

    function scanMachine() {
        //try to connect to the server, if there is an error, show message

        var URL = "https://" + document.getElementById('Saddr').value + ":" + document.getElementById('Sport').value + "/api/machines";

        $.mobile.loading("show");
        $.getJSON(URL, function(data) {
                console.log(data);

                for (var i in data) {
                    var machinetxt = data[i].mid + ": " + data[i].name;
                    console.log(machinetxt);

                    var defaultExists = document.getElementById("Machineoption");

                    if (defaultExists) {
                        $('#Machineoption').remove();
                    }

                    var itemexists = document.getElementById(data[i].name);

                    if (itemexists == null) {
                        console.log("adding Machineoption");
                        var option = document.createElement("option");
                        option.text = machinetxt;
                        option.id = data[i].name;
                        option.value = JSON.stringify(data[i]);
                        console.log(option.value);
                        /*var select = document.getElementById("selectSSID");*/
                        /*select.appendChild(option);*/

                        $("#selectMachine").append(option);

                    }
                }
                $("#selectMachine").selectmenu('refresh');
                document.getElementById("manualmachine").style.display = "none";
                document.getElementById("automachine").style.display = "inherit";
                //TODO: parse the data, upate the dropdown
            })
            .error(function() {
                alert("Can not connect to Database Server. Is the RFID-Controller connected to WiFi? Is the server address and port correct? You can now enter the data Manually or try again.");
                document.getElementById("manualmachine").style.display = "inherit";
            });

        $.mobile.loading("hide");

    };


    function submitWifi() {
        var obj = new Object();
        obj.SSID = document.getElementById('selectSSID').value;
        obj.PASS = document.getElementById('wifipass').value;
        console.log(JSON.stringify(obj));
        connection.send(JSON.stringify(obj));
        return false; //prevent form being posted (we use websocket)
    };

    function submitAdvancedNet() {
        var obj = new Object();
        obj.DHCP = document.getElementById('DHCPuse').value;
    	obj.IP = document.getElementById('DHCPip').value;
        obj.MASK = document.getElementById('DHCPmask').value;
        obj.GATE = document.getElementById('DHCPgate').value;        
    	
        console.log(JSON.stringify(obj));
        connection.send(JSON.stringify(obj));
        return false; //prevent form being posted (we use websocket)
    };


    function submitConfig() {
        var obj = new Object();
        var serverfailed = document.getElementById("Machineoption"); //if default option is still there, server scan failed
        if (serverfailed) { //get manual values
            obj.NDC_MNAME = document.getElementById('Mname').value;
            obj.NDC_MID = document.getElementById('Mid').value;
        } else //read from option string
        {
            var machineselect = JSON.parse(document.getElementById('selectMachine').value);
            obj.NDC_MNAME = machineselect.name;
            obj.NDC_MID = machineselect.mid;
        }

        obj.NDC_SADD = document.getElementById('Saddr').value;
        obj.NDC_PORT = document.getElementById('Sport').value;
        console.log(JSON.stringify(obj));
        connection.send(JSON.stringify(obj));
        return false; //prevent form being posted (we use websocket)
    };

    function submitPass() {
        var obj = new Object();
        obj.RFIDKEY = document.getElementById('RFIDkey').value;
        obj.RFIDCODE = document.getElementById('RFIDcode').value;
        console.log(JSON.stringify(obj));
        connection.send(JSON.stringify(obj));
        return false; //prevent form being posted (we use websocket)
    };    

   	function submitAPI() {
        var obj = new Object();
        obj.APIKEY = document.getElementById('APIkey').value;
        obj.APIUSER = document.getElementById('APIuser').value;
        console.log(JSON.stringify(obj));
        connection.send(JSON.stringify(obj));
        return false; //prevent form being posted (we use websocket)
    };     

   	function submitWeb() {
        var obj = new Object();
        obj.WEBUSER = document.getElementById('WebUser').value;
        obj.WEBPASS = document.getElementById('WebPass').value;
        console.log(JSON.stringify(obj));
        connection.send(JSON.stringify(obj));
        return false; //prevent form being posted (we use websocket)
    };        
	
	function submitUID() {
        var obj = new Object();
        obj.UID = document.getElementById('RFIDadmin').value;
        console.log(JSON.stringify(obj));
        connection.send(JSON.stringify(obj));
        return false; //prevent form being posted (we use websocket)
    };  

	function sendKeyFile() {

        var file = document.getElementById('keyfilename').files[0];
        var reader = new FileReader();

            var rawData = new ArrayBuffer();            
            reader.loadend = function() { 
			}
            reader.onload = function(e) {
                rawData = e.target.result;
                ws.send(rawData);
                alert("the File has been transferred.")
            }
            reader.readAsArrayBuffer(file);
        }	
    

    function updateFirmware() {
        var toSend = "upgradeFW";
        connection.send(toSend);       
    };
    function updateSpiffs() {
        var toSend = "upgradeSPIFFS";
        connection.send(toSend);       
    };


    function DHCPcheckboxfun() {
        if (document.getElementById("DHCPuse").value == "on") {
            document.getElementById("DHCPinputs").style.display = "none";
        } else {
            document.getElementById("DHCPinputs").style.display = "inherit";
        }
    };
    </script>
</head>

<body>
    <!-- /mainpage -->
    <div data-role="page" id="mainpage" data-theme="a">
        <div data-role="header" data-position="fixed">
            <h1>RFID Control Center</h1>
             <a href="#update" data-icon="arrow-u" data-transition="slidedown" class="ui-btn-right">Update</a>
             <a href="#codes" data-icon="gear" data-transition="slidedown" class="ui-btn-left">Passwords</a>
        </div>
        <div data-role="content" data-theme="a">
            <div data-role="content" style="text-align:center">
                <h3 id="connstate">Wifi state: </h3>
            </div>
            <div data-role="collapsible" data-collapsed="false">
                <h4>Setup WiFi Connection:</h4>
                <div data-role="fieldcontain" style="text-align:center">
                    <h5 id="knownSSIDs">Known connections:</h5>
                </div>
                <a data-role="button" id="wifiscan" data-icon="search" onclick="scanWiFi()">Scan available networks</a>
                <form action="" method="post" id="wifiform" onsubmit="return submitWifi()">
                    <div data-role="fieldcontain">
                        <label for="selectSSID">SSID:</label>
                        <select name="SSID" id="selectSSID" data-mini="true" inline="true">
                            <option id="SSIDoption" value="1">Please scan first</option>
                        </select>
                    </div>
                    <div data-role="fieldcontain">
                        <label for="password">Password:</label>
                        <input type="password" name="PASS" id="wifipass" value="" maxlength="31" />
                    </div>
                    <BR>
                    <BR>
                    <!--
                    <p>
                        <input type="button" data-icon="refresh" name="submit" value="test" onclick="submitForm(this.form);">
                    </p> -->
                    <input type="submit" value="Save to Controller" data-icon="refresh">
                </form>
                <BR>
                <div data-role="collapsible">
                    <h4>Advanced WiFi Settings</h4>
                    <h4>DHCP settings</h4>
                    <form action="" method="post" id="dhcpform" onsubmit="return submitAdvancedNet()">
                        <div data-role="fieldcontain">
                            <label for="DHCPuse">Use DHCP </label>
                            <select onchange="DHCPcheckboxfun()" name="DHCPuse" id="DHCPuse" data-role="slider">
                                <option value="off">No</option>
                                <option value="on">Yes</option>
                            </select>
                            <div id="DHCPinputs">
                                <div data-role="fieldcontain">
                                    <BR>
                                    <label for="DHCPip">Static IP</label>
                                    <input id="DHCPip" name="IP" required pattern="((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))((^|\.)((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))){3}$">
                                    <label for="DHCPmask">Subnet Mask</label>
                                    <input id="DHCPmask" name="MASK" required pattern="((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))((^|\.)((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))){3}$">
                                    <label for="DHCPgate">Gateway</label>
                                    <input id="DHCPgate" name="GATE" required pattern="((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))((^|\.)((25[0-5])|(2[0-4]\d)|(1\d\d)|([1-9]?\d))){3}$">
                                </div>
                            </div>
                            <BR>
                            <div data-role="fieldcontain">
                                <input type="submit" value="Save to Controller" id="DHCPsubmit" data-icon="refresh">
                            </div>
                        </div>
                    </form>
                    <div>
                        <h4>Remove Network</h4>
                        <a data-role="button" id="wifidel" data-mini="true" data-icon="delete" onclick="deleteWiFi()">Remove all known networks</a>
                    </div>
                </div>
            </div>
            <BR>
            <BR>
            <div data-role="collapsible" data-collapsed="false">
                <h4>Controller Configuration</h4>
                <form action="" method="post" id="NDConfig" onsubmit="return submitConfig()">
                    <div data-role="fieldcontain">
                        <div data-role="fieldcontain">
                            <label for="Saddr">Server Address</label>
                            <input type="text" id="Saddr" required maxlength="30">
                        </div>
                        <div data-role="fieldcontain">
                            <label for="Sport">Server Port</label>
                            <input type="text" id="Sport" required pattern="\d*" maxlength="6">
                        </div>
                        <BR>
                        <div data-role="fieldcontain">
                            <a data-role="button" id="machinescan" data-icon="search" onclick="scanMachine()">Get machines from database</a>
                        </div>
                        <div data-role="fieldcontain" id="automachine">
                            <label for="selectMachine">Machine Name</label>
                            <select name="Mname" id="selectMachine" data-mini="true" inline="true">
                                <option id="Machineoption" value="1">Please scan first</option>
                            </select>
                        </div>
                        <div data-role="fieldcontain" id="manualmachine">
                            <div data-role="fieldcontain">
                                <label for="MID">Machine ID</label>
                                <input type="text" id="Mid" value="0" required pattern="\d*" maxlength="3">
                            </div>
                            <div data-role="fieldcontain">
                                <label for="Saddr">Machine Name</label>
                                <input type="text" id="Mname" value="0" required maxlength="30">
                            </div>
                        </div>
                        <BR>
                        <input type="submit" value="Save to Controller" data-icon="refresh">
                    </div>
                </form>
            </div>
            <BR>
            <a data-role="button" id="reboot" data-icon="delete" onclick="reboot()">Reboot</a>
            <BR>
            <label for="msg">Message from Controller:</label>
            <div data-role="fieldcontain">
                <textarea rows="20" data-autogrow="false" id="msg"></textarea>
            </div>
        </div>
    </div>
      <!-- /firmware update page -->
    <div data-role="page" id="update" data-theme="a">
        <div data-role="header" data-position="fixed">
            <h1>RFID Control Center: Firmware update</h1>
            <a href="index.htm" data-icon="arrow-l" data-rel="back" class="ui-btn-left">Back</a>
        </div>
        <div data-role="content">
          		<div>      
                    <a data-role="button" id="FWbtn" onclick="updateFirmware()">Update Firmware from server</a>
                  
                </div>
                 <h5>downloads the file http://serveraddress/RFIDfirmware/firmware.bin to the controller. Update will take about 30 seconds, controller reboots when done</h5>
                 
        </div>
        <div data-role="content">
          		<div>      
                    <a data-role="button" id="SPbtn" onclick="updateSpiffs()">Update SPIFFS from server</a>
                </div>
                 <h5>downloads the file http://serveraddress/RFIDfirmware/spiffs.bin to the controller. Update will take about 1 minute, controller reboots when done</h5>                
        </div>
    </div>

    <!-- /Access control setting page-->
    <div data-role="page" id="codes" data-theme="a">
        <div data-role="header" data-position="fixed">
            <h1>RFID Control Center: Password settings</h1>
            <a href="index.htm" data-icon="arrow-l" data-rel="back" class="ui-btn-left">Back</a>
        </div>
       <div data-role="content" data-theme="a">
		<div data-role="collapsible" data-collapsed="false">
            <h4>RFID Access Keys</h4>                             
            <form action="" method="post" id="RFIDConfig" onsubmit="return submitPass()">
            	<h5>The KEY is used to access the data on the RFID tag. Enter as a 6 byte hex number for example '0xDEADBEEF1234'.</h5>
                <h5>The CODE has to match the code stored on the RFID tag for it to be accepted by the controller. Enter 16 characters, '.!_$%@#()' and space are also allowed.</h5> 
                <div data-role="fieldcontain">
                    <div data-role="fieldcontain">
                    
                        <label for="RFIDkey">Key</label>
                        <input type="text" id="RFIDkey" value="0x" required maxlength="14" pattern="0x[a-fA-F0-9]{12}$"> 
                    </div>
                    <div data-role="fieldcontain">
                       
                        <label for="RFIDcode">Code</label>
                        <input type="text" id="RFIDcode" required maxlength="16" pattern="[A-Za-z0-9._!%$@#)(\s]{16}$">
                    </div>
                    <BR>
                    <input type="submit" value="Save to Controller" data-icon="refresh">
                </div>
            </form>
			<BR>
             <h5>To program new (blank) tags with the codes stored on this RFID controller use the button below. Hold each blank tag against the reader and it will be programmed immediately. To reset a card to blank state for tags using the currently programmd codes, use the other button. Reboot when done.WARNING: check if the codes are correct before using this function or your tag can be bricked.</h5> 
            <a data-role="button" id="program" data-icon="alert" onclick="RFIDprogram()">Program blank tags</a>
            <BR>
            <a data-role="button" id="clear" data-icon="star" onclick="RFIDclear()">Clear programmed tags</a>            
        </div>
        <BR>
		<div data-role="collapsible" data-collapsed="false">
                <h4>Server public key</h4>                             
             <h5>Access key for the API of the server. The file must contain the public key from the server (see key.pem file in firmware folder for an example). The file must be smaller than 512bytes. It can be extracted from the server certificate with openssl. Example command: 'openssl x509 -pubkey -noout -in cert.pem'</h5> 
            <input type="file" id="keyfilename">
			<input type="button" value="Upload Key" onclick="sendKeyFile()" >
			
			<form method='POST' enctype='multipart/form-data'><input type='file' name='key'><input type='submit' value='Upload File'>  
             
            </form>
    	</div>
		<BR>
		<div data-role="collapsible" data-collapsed="false">
                <h4>Config Webpage Access</h4>                             
            <form action="" method="post" id="APIConfig" onsubmit="return submitWeb()">
             <h5>Change access credentials for this site on this controller</h5> 
                <div data-role="fieldcontain">
                    <div data-role="fieldcontain">
                        <label for="WebUser">Username</label>
                        <input type="text" id="WebUser" required maxlength="31"> 
                    </div>
                    <div data-role="fieldcontain">
                        <label for="WebPass">Password</label>
                        <input type="text" id="WebPass" required maxlength="31">
                    </div>
                    <BR>
                    <input type="submit" value="Save to Controller" data-icon="refresh">
                </div>
            </form>
    	</div> 
		<BR>
		<div data-role="collapsible" data-collapsed="false">
                <h4>Admin RFID tag</h4>                             
            <form action="" method="post" id="APIConfigUID" onsubmit="return submitUID()">
             <h5>This 32bit UID has unlimited access and works even after a full config reset. Enter it as a integer number.</h5> 
                <div data-role="fieldcontain">
                    <div data-role="fieldcontain">
                        <label for="RFIDadmin">RFID UID</label>
                        <input type="text" id="RFIDadmin" required maxlength="10" pattern="\d*"> 
                    </div>
                    <BR>
                    <input type="submit" value="Save to Controller" data-icon="refresh">
                </div>
            </form>
    	</div>     	   	
       </div>
	</div>
    <script>
    function wsconnect(localIP) {
        ipValue = localIP;

        connection = new WebSocket(ipValue);
		connection.binaryType = "arraybuffer";
        connection.onerror = function(event) { console.log("Websocket Error! Need Websocket support for this page to work") }
        /*incoming websocket message handling*/
        connection.onmessage = function(evt) {
            evt.data = evt.data.replace(/[^\x20-\x7E]+/g, ''); //remove invalid characters
            console.log(evt.data);
            if (evt.data.substring(0, 4) == "SSID") { /*SSID update string: 'SSIDxxxxxxx,PASSxxxxxxx'*/
                /*fill in the forms from the ESP*/
                var defaultExists = document.getElementById("SSIDoption");

                if (defaultExists) {
                    $('#SSIDoption').remove();
                }

                var itemexists = document.getElementById(evt.data.substring(4, evt.data.length));

                if (itemexists == null) {
                    console.log("adding SSID");
                    var option = document.createElement("option");
                    option.text = evt.data.substring(4, evt.data.length);
                    option.id = evt.data.substring(4, evt.data.length);
                    option.value = evt.data.substring(4, evt.data.length);
                    /*var select = document.getElementById("selectSSID");*/
                    /*select.appendChild(option);*/

                    $("#selectSSID").append(option);
                    $("#selectSSID").selectmenu('refresh');
                }
                $.mobile.loading("hide");
            } else if (evt.data.substring(0, 4) == "DHCP") { /*DHCP update string: 'DHCPYes,IPx.xx.xxx.x,SUBxx.xx.xx.x,GATExx.xx.xx.xx'*/
                document.getElementById('DHCPuse').value = evt.data.substring(evt.data.indexOf("DHCP") + 4, evt.data.indexOf(",IP"));
                document.getElementById('DHCPip').value = evt.data.substring(evt.data.indexOf(",IP") + 3, evt.data.indexOf(",SUB"));
                document.getElementById('DHCPmask').value = evt.data.substring(evt.data.indexOf(",SUB") + 4, evt.data.indexOf(",GATE"));
                document.getElementById('DHCPgate').value = evt.data.substring(evt.data.indexOf(",GATE") + 5, evt.data.length);
                setTimeout(function() { $(document.getElementById('DHCPuse')).slider("refresh"); }, 1000);
                DHCPcheckboxfun(); /*update DHCP settings */

            } else if (evt.data.substring(0, 9) == "NDC_MNAME") { /*Node config update string: 'NDC_MNAMExx,NDC_MIDxx,NDC_SADDxx,NDC_PORTxx'*/
                document.getElementById('Mname').value = evt.data.substring(evt.data.indexOf("NDC_MNAME") + 9, evt.data.indexOf(",NDC_MID"));
                document.getElementById('Mid').value = evt.data.substring(evt.data.indexOf(",NDC_MID") + 8, evt.data.indexOf(",NDC_SADD"));
                document.getElementById('Saddr').value = evt.data.substring(evt.data.indexOf(",NDC_SADD") + 9, evt.data.indexOf(",NDC_PORT"));
                document.getElementById('Sport').value = evt.data.substring(evt.data.indexOf(",NDC_PORT") + 9, evt.data.length);
 				$.mobile.loading("hide"); //data is sent last, if received, hide loader
            } else if (evt.data.substring(0, 4) == "WiFi") { /*Wifi connection status update*/
                if (evt.data.substring(4, 6) == "OK") {
                    document.getElementById("connstate").innerHTML =
                        "Connected to " + evt.data.substring(6, evt.data.indexOf(",IP")) + " with IP address " + evt.data.substring(evt.data.indexOf(",IP") + 3, evt.data.length);
                    document.getElementById("connstate").style.color = "limegreen";
                } else {
                    document.getElementById("connstate").innerHTML = "Wifi DISCONNECTED";
                    document.getElementById("connstate").style.color = "crimson";
                }
            } else if (evt.data.substring(0, 7) == "network") { /*Wifi connection status update*/
                var networks = evt.data.substring(8, evt.data.length);
                networks = networks.split(",");
                document.getElementById("knownSSIDs").innerHTML = "Known connections:" + networks;

            } else if (evt.data.substring(0, 3) == "msg") {
                document.getElementById('msg').value += evt.data.substring(3, evt.data.length);
                document.getElementById('msg').scrollTop = document.getElementById('msg').scrollHeight
            }

            /*todo: could use a slider to control the brighness of the LED and/or the color*/
        }
    };

    $(document).ready(function() {
        try {
            wsconnect(urltext);
        } catch (er) {
            alert("No WebSocket Connection possible")
        }
          $.mobile.loading("show");
        $(document.getElementById('DHCPuse')).slider("refresh");
        //hide MID control at beginning
        document.getElementById("automachine").style.display = "none";
        document.getElementById("manualmachine").style.display = "none";
    });
    /*close the websocket connection when page is left or refreshed*/
    window.onbeforeunload = function() {
        connection.onclose = function() {}; /* disable onclose handler first*/
        connection.close()
    };
    </script>
</body>

</html>